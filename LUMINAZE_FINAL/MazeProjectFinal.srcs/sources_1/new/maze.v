`timescale 1ns / 1ps
module maze(pixel_x, pixel_y, flag);
   input [9:0] pixel_x;
   input [9:0] pixel_y;
   output flag;
   
   // 30 x 30 grid for the maze
   reg [0:29] m [29:0];
   
   // scaling the x and y coordinates to fit our maze grid
   wire [5:0] x = pixel_x[9:4] - 5;
   wire [5:0] y = pixel_y[9:4];
   assign flag = m[y][x];
   
   initial begin
   
   // 30 by 30 pixels for the maze ( 1 represent walls, 0 represents path)
    m[0]   = 30'b011111111111111111111111111110;
    m[1]   = 30'b011111111111111111111111111110;
    m[2]   = 30'b010000000100000010000000000010;
    m[3]   = 30'b010000000100000010000000000010;
    m[4]   = 30'b010011111111100100011111110010;
    m[5]   = 30'b010000010000000100010000010010;
    m[6]   = 30'b010000010000000100010111010010;
    m[7]   = 30'b010010011111100100010100010010;
    m[8]   = 30'b011110010000100000010111110010;
    m[9]   = 30'b010010010000000000010000000010;
    m[10]  = 30'b010010010011000011001000000010;
    m[11]  = 30'b010010000100100100100111110010;
    m[12]  = 30'b010010000100000000100000010010;
    m[13]  = 30'b010010100100000000101111110010;
    m[14]  = 30'b010010100100000000101000000010;
    m[15]  = 30'b010010100010000001001000010010;
    m[16]  = 30'b010010100001000010001001010010;
    m[17]  = 30'b010010110000100100111001110010;
    m[18]  = 30'b010010011000100100001111010010;
    m[19]  = 30'b010010000000100100000000010010;
    m[20]  = 30'b010010000000100100111110010010;
    m[21]  = 30'b010010011111100100100000000010;
    m[22]  = 30'b010010010000000111100000000010;
    m[23]  = 30'b010010010000000000100001111110;
    m[24]  = 30'b010011111111111100110011000010;
    m[25]  = 30'b010000000000000000000000000010;
    m[26]  = 30'b010000000000000000000000000010;
    m[27]  = 30'b010000000000000000000000000010;
    m[28]  = 30'b011111111111111111111111111110;
    m[29]  = 30'b011111111111111111111111111110;
   end
endmodule